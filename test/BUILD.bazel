# Copyright 2025 rules_cc_module authors
# Licensed under the Apache License, Version 2.0

load("//cc_module:defs.bzl", "cc_module_library", "cc_module_binary")

# Example module library
cc_module_library(
    name = "math_module",
    module_interfaces = ["math_module.ixx"],
    srcs = [
        "math_impl.cpp",
    ],
    copts = [
        "/std:c++latest",
    ],
    hdrs = ["math_common.h"],
    features = ["cpp_modules"],
)

# Example binary using the module
cc_module_binary(
    name = "calculator",
    srcs = ["main.cpp"],
    deps = [":math_module"],
    copts = [
        "/std:c++latest",
    ],
    linkstatic = True,
    features = ["cpp_modules"],
)

# Header-only library test (no srcs, only hdrs)
cc_module_library(
    name = "header_only_lib",
    hdrs = ["header_only_test.h"],
    copts = ["/std:c++latest"],
)

# Binary using header-only library
cc_module_binary(
    name = "header_only_test",
    srcs = ["header_only_main.cpp"],
    deps = [":header_only_lib"],
    copts = ["/std:c++latest"],
    linkstatic = True,
)

# Module interface only (no srcs) - this should work since module interfaces generate .obj files
cc_module_library(
    name = "header_only_module_lib",
    module_interfaces = ["header_only_module.ixx"],
    copts = ["/std:c++latest"],
    features = ["cpp_modules"],
)

# Binary using header-only module
cc_module_binary(
    name = "header_only_module_test",
    srcs = ["header_only_module_main.cpp"],
    deps = [":header_only_module_lib"],
    copts = ["/std:c++latest"],
    features = ["cpp_modules"],
    linkstatic = True,
)
